@page "/counter"

<EditForm Model="producto" OnValidSubmit="Guardar">

    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="card">
        <div class="card-header">
            <h3>Registro</h3>
        </div>

        <div class="card-body">
            <form>

                @*Producto id*@

                <div class="form-row align-items-center">

                    <div class="col">

                        <div class="form-group">

                            <label>ProductoID</label>

                            <div class="input-group">

                                <InputNumber @bind-Value="producto.ProductoId" class="form-control col-4" />

                                <div>

                                    <button type="button" class="btn btn-primary input-group-text"
                                        @onclick="Buscar">Buscar</button>
                                </div>

                            </div>

                        </div>

                    </div>

                </div>


                @* Descricion *@
                <div class="form-group">
                    <label>Descricion</label>
                    <InputText class="form-control" @bind-Value="producto.Descripcion" />
                    <ValidationMessage For="@(() =>producto.Descripcion)" />
                </div>
                @* Exitencia *@
                <div class="form-group">
                    <label>Exitencia</label>
                    <InputNumber class="form-control" @bind-Value="producto.Existencia" />
                    <ValidationMessage For="@(() =>producto.Existencia)" />
                </div>
                @* Costo *@
                <div class="form-group">
                    <label>Costo</label>
                    <InputNumber class="form-control" @bind-Value="producto.Costo" />
                    <ValidationMessage For="@(() =>producto.Costo)" />
                </div>
                <div class="form-group">
                    <label>Inventario</label>
                    <InputNumber class="form-control" @bind-Value="producto.ValorInventario" />
                    <ValidationMessage For="@(() =>producto.ValorInventario)" />
                </div>

            </form>
            <div class="card-footer">

                <div class="form-group text-center" display: inline-block>

                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>

                    <button type="submit" class="btn btn-lg btn-success">Guardar</button>

                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>

                </div>

            </div>
        </div>
    </div>

</EditForm>

@code {

    public Producto producto { get; set; } = new Producto();
    private int currentCount = 0;

    private void IncrementCount()
    {
        
    }

   

    void Limpiar()
    {
        this.producto = new Producto();
    }
    @*private void Guardar()
    {
        if (!ProductoBLL.ExisteDescripcion(producto.Descripcion))
        {
            bool paso = false;

            producto.ValorInventario = producto.Costo * producto.Existencia;

            paso = ProductoBLL.Guardar(producto);

            if (paso)
            {
                Limpiar();
            }
            else
            {
            }
        }
        else
        {
        }
    }*@

public void Guardar() {

        if(!ProductoBLL.ExisteDescripcion(producto.Descripcion)){

                bool paso = false;

                producto.ValorInventario=producto.Existencia*producto.Costo;

                ProductoBLL.Insertar(producto);
        }else{

            Limpiar();

        }     

    }
    private void Buscar()
    {
        
        {
            var encontrado = ProductoBLL.Buscar(this.producto.ProductoId);

            if (encontrado != null)
            {
                this.producto.Descripcion = encontrado.Descripcion;
                this.producto.Costo = encontrado.Costo;
                this.producto.Existencia = encontrado.Existencia;
                this.producto.ValorInventario = encontrado.ValorInventario;

            }
            else
            {
                Limpiar();
            }

        }
    }
    private void Nuevo()
    {

    }

    private void Eliminar()
    {
        if (ProductoBLL.Eliminar(producto.ProductoId))
        {
            Limpiar();
            @* MessageBox.Show("El producto se eliminó con exito", "Exito", MessageBoxButton.OK, MessageBoxImage.Information); *@
        }
        else
        {
            @* MessageBox.Show("No fue posible eliminar el producto", "Fallo", MessageBoxButton.OK, MessageBoxImage.Error); *@
        }
    }


}
